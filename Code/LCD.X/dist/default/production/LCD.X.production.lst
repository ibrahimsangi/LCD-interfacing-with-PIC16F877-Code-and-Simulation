

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Sun Aug 10 23:48:07 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	16F877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0006                     	;# 
    23  0007                     	;# 
    24  0008                     	;# 
    25  0009                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000D                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0014                     	;# 
    38  0015                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0017                     	;# 
    42  0018                     	;# 
    43  0019                     	;# 
    44  001A                     	;# 
    45  001B                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001D                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  0081                     	;# 
    52  0085                     	;# 
    53  0086                     	;# 
    54  0087                     	;# 
    55  0088                     	;# 
    56  0089                     	;# 
    57  008C                     	;# 
    58  008D                     	;# 
    59  008E                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0093                     	;# 
    63  0094                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009E                     	;# 
    67  009F                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  010E                     	;# 
    71  010F                     	;# 
    72  018C                     	;# 
    73  018D                     	;# 
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0006                     _PORTB	set	6
   133  0007                     _PORTCbits	set	7
   134  0086                     _TRISB	set	134
   135  0087                     _TRISCbits	set	135
   136                           
   137                           	psect	strings
   138  0003                     __pstrings:	
   139  0003                     stringtab:	
   140  0003                     __stringtab:	
   141  0003                     stringcode:	
   142                           ;	String table - string pointers are 1 byte each
   143                           
   144  0003                     stringdir:	
   145  0003  3000               	movlw	high stringdir
   146  0004  008A               	movwf	10
   147  0005  0804               	movf	4,w
   148  0006  0A84               	incf	4,f
   149  0007  0782               	addwf	2,f
   150  0008                     __stringbase:	
   151  0008  3400               	retlw	0
   152  0009                     __end_of__stringtab:	
   153  0009                     __stringdata:	
   154  0009                     STR_2:	
   155  0009  3420               	retlw	32	;' '
   156  000A  3420               	retlw	32	;' '
   157  000B  3449               	retlw	73	;'I'
   158  000C  3462               	retlw	98	;'b'
   159  000D  3472               	retlw	114	;'r'
   160  000E  3461               	retlw	97	;'a'
   161  000F  3468               	retlw	104	;'h'
   162  0010  3469               	retlw	105	;'i'
   163  0011  346D               	retlw	109	;'m'
   164  0012  346C               	retlw	108	;'l'
   165  0013  3461               	retlw	97	;'a'
   166  0014  3462               	retlw	98	;'b'
   167  0015  3473               	retlw	115	;'s'
   168  0016  3420               	retlw	32	;' '
   169  0017  3420               	retlw	32	;' '
   170  0018  3420               	retlw	32	;' '
   171  0019  3400               	retlw	0
   172  001A                     STR_1:	
   173  001A  3420               	retlw	32	;' '
   174  001B  342A               	retlw	42	;'*'
   175  001C  342A               	retlw	42	;'*'
   176  001D  342A               	retlw	42	;'*'
   177  001E  3457               	retlw	87	;'W'
   178  001F  3465               	retlw	101	;'e'
   179  0020  346C               	retlw	108	;'l'
   180  0021  3463               	retlw	99	;'c'
   181  0022  346F               	retlw	111	;'o'
   182  0023  346D               	retlw	109	;'m'
   183  0024  3465               	retlw	101	;'e'
   184  0025  342A               	retlw	42	;'*'
   185  0026  342A               	retlw	42	;'*'
   186  0027  342A               	retlw	42	;'*'
   187  0028  3420               	retlw	32	;' '
   188  0029  3420               	retlw	32	;' '
   189  002A  3400               	retlw	0
   190  002B                     __end_of__stringdata:	
   191                           
   192                           ; #config settings
   193  0000                     
   194                           	psect	cinit
   195  07FC                     start_initialization:	
   196  07FC                     __initialization:	
   197  07FC                     end_of_initialization:	
   198                           ;End of C runtime variable initialization code
   199                           
   200  07FC                     __end_of__initialization:	
   201  07FC  0183               	clrf	3
   202  07FD  120A  118A  2FBF   	ljmp	_main	;jump to C main() function
   203                           
   204                           	psect	cstackCOMMON
   205  0070                     __pcstackCOMMON:	
   206  0070                     ?_Initilize_LCD:	
   207  0070                     ?_ClearScreen_LCD:	
   208                           ; 0 bytes @ 0x0
   209                           
   210  0070                     ?_WriteString_LCD:	
   211                           ; 0 bytes @ 0x0
   212                           
   213  0070                     ?_WriteCmd_LCD:	
   214                           ; 0 bytes @ 0x0
   215                           
   216  0070                     ?_Toggle_Enable_Pin_LCD:	
   217                           ; 0 bytes @ 0x0
   218                           
   219  0070                     ??_Toggle_Enable_Pin_LCD:	
   220                           ; 0 bytes @ 0x0
   221                           
   222  0070                     ?_WriteData_LCD:	
   223                           ; 0 bytes @ 0x0
   224                           
   225  0070                     ?_MoveCursorToPosition:	
   226                           ; 0 bytes @ 0x0
   227                           
   228  0070                     ?_main:	
   229                           ; 1 bytes @ 0x0
   230                           
   231                           
   232                           ; 2 bytes @ 0x0
   233  0070                     	ds	1
   234  0071                     ??_WriteCmd_LCD:	
   235  0071                     ??_WriteData_LCD:	
   236                           ; 0 bytes @ 0x1
   237                           
   238  0071                     WriteCmd_LCD@Cmd:	
   239                           ; 0 bytes @ 0x1
   240                           
   241  0071                     WriteData_LCD@Data:	
   242                           ; 1 bytes @ 0x1
   243                           
   244                           
   245                           ; 1 bytes @ 0x1
   246  0071                     	ds	1
   247  0072                     ??_ClearScreen_LCD:	
   248  0072                     ??_MoveCursorToPosition:	
   249                           ; 0 bytes @ 0x2
   250                           
   251  0072                     ??_WriteString_LCD:	
   252                           ; 0 bytes @ 0x2
   253                           
   254  0072                     MoveCursorToPosition@Address:	
   255                           ; 0 bytes @ 0x2
   256                           
   257                           
   258                           ; 1 bytes @ 0x2
   259  0072                     	ds	1
   260  0073                     WriteString_LCD@String:	
   261                           
   262                           ; 1 bytes @ 0x3
   263  0073                     	ds	1
   264  0074                     ??_Initilize_LCD:	
   265                           
   266                           ; 0 bytes @ 0x4
   267  0074                     	ds	2
   268  0076                     ??_main:	
   269                           
   270                           ; 0 bytes @ 0x6
   271  0076                     	ds	3
   272                           
   273                           	psect	maintext
   274  07BF                     __pmaintext:	
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 29 in file "main.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  2   12[COMMON] int 
   287 ;; Registers used:
   288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   289 ;; Tracked objects:
   290 ;;		On entry : 17F/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   294 ;;      Params:         0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0
   296 ;;      Temps:          3       0       0       0       0
   297 ;;      Totals:         3       0       0       0       0
   298 ;;Total ram usage:        3 bytes
   299 ;; Hardware stack levels required when called:    4
   300 ;; This function calls:
   301 ;;		_ClearScreen_LCD
   302 ;;		_Initilize_LCD
   303 ;;		_MoveCursorToPosition
   304 ;;		_WriteString_LCD
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           
   311                           ;psect for function _main
   312  07BF                     _main:	
   313                           
   314                           ;main.c: 31: Initilize_LCD();
   315                           
   316                           ;incstack = 0
   317                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   318  07BF  120A  118A  2796   	fcall	_Initilize_LCD
      +       120A  118A         
   319  07C4                     l13:	
   320                           ;main.c: 33: while(1)
   321                           
   322                           
   323                           ;main.c: 34: {
   324                           ;main.c: 35: ClearScreen_LCD();
   325  07C4  120A  118A  2743   	fcall	_ClearScreen_LCD
      +       120A  118A         
   326                           
   327                           ;main.c: 36: _delay((unsigned long)((100)*(10000000UL/4000.0)));
   328  07C9  3002               	movlw	2
   329  07CA  00F8               	movwf	??_main+2
   330  07CB  3045               	movlw	69
   331  07CC  00F7               	movwf	??_main+1
   332  07CD  30A9               	movlw	169
   333  07CE  00F6               	movwf	??_main
   334  07CF                     u67:	
   335  07CF  0BF6               	decfsz	??_main,f
   336  07D0  2FCF               	goto	u67
   337  07D1  0BF7               	decfsz	??_main+1,f
   338  07D2  2FCF               	goto	u67
   339  07D3  0BF8               	decfsz	??_main+2,f
   340  07D4  2FCF               	goto	u67
   341  07D5  2FD6               	nop2
   342                           
   343                           ;main.c: 37: MoveCursorToPosition(0x80);
   344  07D6  3080               	movlw	128
   345  07D7  120A  118A  2764   	fcall	_MoveCursorToPosition
      +       120A  118A         
   346                           
   347                           ;main.c: 38: WriteString_LCD(" ***Welcome***  ");
   348  07DC  3012               	movlw	(STR_1-__stringbase)& (0+255)
   349  07DD  120A  118A  277A   	fcall	_WriteString_LCD
      +       120A  118A         
   350                           
   351                           ;main.c: 39: MoveCursorToPosition(0xC0);
   352  07E2  30C0               	movlw	192
   353  07E3  120A  118A  2764   	fcall	_MoveCursorToPosition
      +       120A  118A         
   354                           
   355                           ;main.c: 40: WriteString_LCD("  Ibrahimlabs   ");
   356  07E8  3001               	movlw	(STR_2-__stringbase)& (0+255)
   357  07E9  120A  118A  277A   	fcall	_WriteString_LCD
      +       120A  118A         
   358                           
   359                           ;main.c: 41: _delay((unsigned long)((1000)*(10000000UL/4000.0)));
   360  07EE  300D               	movlw	13
   361  07EF  00F8               	movwf	??_main+2
   362  07F0  30AF               	movlw	175
   363  07F1  00F7               	movwf	??_main+1
   364  07F2  30C1               	movlw	193
   365  07F3  00F6               	movwf	??_main
   366  07F4                     u77:	
   367  07F4  0BF6               	decfsz	??_main,f
   368  07F5  2FF4               	goto	u77
   369  07F6  0BF7               	decfsz	??_main+1,f
   370  07F7  2FF4               	goto	u77
   371  07F8  0BF8               	decfsz	??_main+2,f
   372  07F9  2FF4               	goto	u77
   373  07FA  0000               	nop
   374  07FB  2FC4               	goto	l13
   375  07FC                     __end_of_main:	
   376                           ;main.c: 42: }
   377                           ;main.c: 43: return 0;
   378                           ;	Return value of _main is never used
   379                           
   380                           
   381                           	psect	text1
   382  077A                     __ptext1:	
   383 ;; *************** function _WriteString_LCD *****************
   384 ;; Defined at:
   385 ;;		line 88 in file "LCD.c"
   386 ;; Parameters:    Size  Location     Type
   387 ;;  String          1    wreg     PTR const unsigned char 
   388 ;;		 -> STR_2(17), STR_1(17), 
   389 ;; Auto vars:     Size  Location     Type
   390 ;;  String          1    3[COMMON] PTR const unsigned char 
   391 ;;		 -> STR_2(17), STR_1(17), 
   392 ;; Return value:  Size  Location     Type
   393 ;;		None               void
   394 ;; Registers used:
   395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   401 ;;      Params:         0       0       0       0       0
   402 ;;      Locals:         1       0       0       0       0
   403 ;;      Temps:          1       0       0       0       0
   404 ;;      Totals:         2       0       0       0       0
   405 ;;Total ram usage:        2 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; Hardware stack levels required when called:    2
   408 ;; This function calls:
   409 ;;		_WriteData_LCD
   410 ;; This function is called by:
   411 ;;		_main
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           
   416                           ;psect for function _WriteString_LCD
   417  077A                     _WriteString_LCD:	
   418                           
   419                           ;incstack = 0
   420                           ; Regs used in _WriteString_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   421                           ;WriteString_LCD@String stored from wreg
   422  077A  00F3               	movwf	WriteString_LCD@String
   423  077B                     l559:	
   424                           ;LCD.c: 90: while(*String)
   425                           
   426  077B  0873               	movf	WriteString_LCD@String,w
   427  077C  0084               	movwf	4
   428  077D  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
   429  0782  3800               	iorlw	0
   430  0783  1903               	btfsc	3,2
   431  0784  0008               	return
   432                           
   433                           ;LCD.c: 91: {
   434                           ;LCD.c: 92: WriteData_LCD(*String++);
   435  0785  0873               	movf	WriteString_LCD@String,w
   436  0786  0084               	movwf	4
   437  0787  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
   438  078C  120A  118A  2739   	fcall	_WriteData_LCD
      +       120A  118A         
   439  0791  3001               	movlw	1
   440  0792  00F2               	movwf	??_WriteString_LCD
   441  0793  0872               	movf	??_WriteString_LCD,w
   442  0794  07F3               	addwf	WriteString_LCD@String,f
   443  0795  2F7B               	goto	l559
   444  0796                     __end_of_WriteString_LCD:	
   445                           
   446                           	psect	text2
   447  0739                     __ptext2:	
   448 ;; *************** function _WriteData_LCD *****************
   449 ;; Defined at:
   450 ;;		line 78 in file "LCD.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;  Data            1    wreg     unsigned char 
   453 ;; Auto vars:     Size  Location     Type
   454 ;;  Data            1    1[COMMON] unsigned char 
   455 ;; Return value:  Size  Location     Type
   456 ;;		None               void
   457 ;; Registers used:
   458 ;;		wreg, status,2, status,0, pclath, cstack
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   464 ;;      Params:         0       0       0       0       0
   465 ;;      Locals:         1       0       0       0       0
   466 ;;      Temps:          0       0       0       0       0
   467 ;;      Totals:         1       0       0       0       0
   468 ;;Total ram usage:        1 bytes
   469 ;; Hardware stack levels used:    1
   470 ;; Hardware stack levels required when called:    1
   471 ;; This function calls:
   472 ;;		_Toggle_Enable_Pin_LCD
   473 ;; This function is called by:
   474 ;;		_WriteString_LCD
   475 ;; This function uses a non-reentrant model
   476 ;;
   477                           
   478                           
   479                           ;psect for function _WriteData_LCD
   480  0739                     _WriteData_LCD:	
   481                           
   482                           ;incstack = 0
   483                           ; Regs used in _WriteData_LCD: [wreg+status,2+status,0+pclath+cstack]
   484                           ;WriteData_LCD@Data stored from wreg
   485  0739  00F1               	movwf	WriteData_LCD@Data
   486                           
   487                           ;LCD.c: 80: PORTCbits.RC0 = 1;
   488  073A  1283               	bcf	3,5	;RP0=0, select bank0
   489  073B  1303               	bcf	3,6	;RP1=0, select bank0
   490  073C  1407               	bsf	7,0	;volatile
   491                           
   492                           ;LCD.c: 81: PORTB = Data;
   493  073D  0871               	movf	WriteData_LCD@Data,w
   494  073E  0086               	movwf	6	;volatile
   495                           
   496                           ;LCD.c: 83: Toggle_Enable_Pin_LCD();
   497  073F  120A  118A  2753   	fcall	_Toggle_Enable_Pin_LCD
   498  0742  0008               	return
   499  0743                     __end_of_WriteData_LCD:	
   500                           
   501                           	psect	text3
   502  0764                     __ptext3:	
   503 ;; *************** function _MoveCursorToPosition *****************
   504 ;; Defined at:
   505 ;;		line 98 in file "LCD.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;  Address         1    wreg     unsigned char 
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  Address         1    2[COMMON] unsigned char 
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      unsigned char 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0, pclath, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   519 ;;      Params:         0       0       0       0       0
   520 ;;      Locals:         1       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0
   522 ;;      Totals:         1       0       0       0       0
   523 ;;Total ram usage:        1 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; Hardware stack levels required when called:    2
   526 ;; This function calls:
   527 ;;		_WriteCmd_LCD
   528 ;; This function is called by:
   529 ;;		_main
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           
   534                           ;psect for function _MoveCursorToPosition
   535  0764                     _MoveCursorToPosition:	
   536                           
   537                           ;incstack = 0
   538                           ; Regs used in _MoveCursorToPosition: [wreg+status,2+status,0+pclath+cstack]
   539                           ;MoveCursorToPosition@Address stored from wreg
   540  0764  00F2               	movwf	MoveCursorToPosition@Address
   541                           
   542                           ;LCD.c: 101: if ((Address >= 0x80 && Address <= 0xA8) || (Address >= 0xC0 && Address <= 
      +                          0xE8))
   543  0765  3080               	movlw	128
   544  0766  0272               	subwf	MoveCursorToPosition@Address,w
   545  0767  1C03               	skipc
   546  0768  2F6D               	goto	l543
   547  0769  30A9               	movlw	169
   548  076A  0272               	subwf	MoveCursorToPosition@Address,w
   549  076B  1C03               	skipc
   550  076C  2F75               	goto	l547
   551  076D                     l543:	
   552  076D  30C0               	movlw	192
   553  076E  0272               	subwf	MoveCursorToPosition@Address,w
   554  076F  1C03               	skipc
   555  0770  0008               	return
   556  0771  30E9               	movlw	233
   557  0772  0272               	subwf	MoveCursorToPosition@Address,w
   558  0773  1803               	skipnc
   559  0774  0008               	return
   560  0775                     l547:	
   561                           
   562                           ;LCD.c: 102: {
   563                           ;LCD.c: 103: WriteCmd_LCD(Address);
   564  0775  0872               	movf	MoveCursorToPosition@Address,w
   565  0776  120A  118A  272F   	fcall	_WriteCmd_LCD
   566                           
   567                           ;LCD.c: 106: else
   568                           ;LCD.c: 107: return 0;
   569                           ;	Return value of _MoveCursorToPosition is never used
   570                           
   571                           ;LCD.c: 105: }
   572                           
   573                           ;LCD.c: 104: return 1;
   574                           ;	Return value of _MoveCursorToPosition is never used
   575  0779  0008               	return
   576  077A                     __end_of_MoveCursorToPosition:	
   577                           
   578                           	psect	text4
   579  0796                     __ptext4:	
   580 ;; *************** function _Initilize_LCD *****************
   581 ;; Defined at:
   582 ;;		line 18 in file "LCD.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;		None               void
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, pclath, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   596 ;;      Params:         0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0
   598 ;;      Temps:          2       0       0       0       0
   599 ;;      Totals:         2       0       0       0       0
   600 ;;Total ram usage:        2 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    3
   603 ;; This function calls:
   604 ;;		_ClearScreen_LCD
   605 ;;		_WriteCmd_LCD
   606 ;; This function is called by:
   607 ;;		_main
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           
   612                           ;psect for function _Initilize_LCD
   613  0796                     _Initilize_LCD:	
   614                           
   615                           ;LCD.c: 22: TRISCbits.TRISC1 = 0;
   616                           
   617                           ;incstack = 0
   618                           ; Regs used in _Initilize_LCD: [wreg+status,2+status,0+pclath+cstack]
   619  0796  1683               	bsf	3,5	;RP0=1, select bank1
   620  0797  1303               	bcf	3,6	;RP1=0, select bank1
   621  0798  1087               	bcf	7,1	;volatile
   622                           
   623                           ;LCD.c: 23: TRISCbits.TRISC0 = 0;
   624  0799  1007               	bcf	7,0	;volatile
   625                           
   626                           ;LCD.c: 24: TRISB = 0;
   627  079A  0186               	clrf	6	;volatile
   628                           
   629                           ;LCD.c: 28: PORTCbits.RC1 = 0;
   630  079B  1283               	bcf	3,5	;RP0=0, select bank0
   631  079C  1303               	bcf	3,6	;RP1=0, select bank0
   632  079D  1087               	bcf	7,1	;volatile
   633                           
   634                           ;LCD.c: 29: PORTCbits.RC0 = 0;
   635  079E  1007               	bcf	7,0	;volatile
   636                           
   637                           ;LCD.c: 30: PORTB = 0;
   638  079F  0186               	clrf	6	;volatile
   639                           
   640                           ;LCD.c: 32: _delay((unsigned long)((10)*(10000000UL/4000.0)));
   641  07A0  3021               	movlw	33
   642  07A1  00F5               	movwf	??_Initilize_LCD+1
   643  07A2  3076               	movlw	118
   644  07A3  00F4               	movwf	??_Initilize_LCD
   645  07A4                     u87:	
   646  07A4  0BF4               	decfsz	??_Initilize_LCD,f
   647  07A5  2FA4               	goto	u87
   648  07A6  0BF5               	decfsz	??_Initilize_LCD+1,f
   649  07A7  2FA4               	goto	u87
   650  07A8  0000               	nop
   651                           
   652                           ;LCD.c: 36: WriteCmd_LCD(0x38);
   653  07A9  3038               	movlw	56
   654  07AA  120A  118A  272F   	fcall	_WriteCmd_LCD
      +       120A  118A         
   655                           
   656                           ;LCD.c: 37: WriteCmd_LCD(0x0F);
   657  07AF  300F               	movlw	15
   658  07B0  120A  118A  272F   	fcall	_WriteCmd_LCD
      +       120A  118A         
   659                           
   660                           ;LCD.c: 38: WriteCmd_LCD(0x06);
   661  07B5  3006               	movlw	6
   662  07B6  120A  118A  272F   	fcall	_WriteCmd_LCD
      +       120A  118A         
   663                           
   664                           ;LCD.c: 39: ClearScreen_LCD();
   665  07BB  120A  118A  2743   	fcall	_ClearScreen_LCD
   666  07BE  0008               	return
   667  07BF                     __end_of_Initilize_LCD:	
   668                           
   669                           	psect	text5
   670  0743                     __ptext5:	
   671 ;; *************** function _ClearScreen_LCD *****************
   672 ;; Defined at:
   673 ;;		line 45 in file "LCD.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;		None
   678 ;; Return value:  Size  Location     Type
   679 ;;		None               void
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       0       0       0       0
   689 ;;      Temps:          2       0       0       0       0
   690 ;;      Totals:         2       0       0       0       0
   691 ;;Total ram usage:        2 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    2
   694 ;; This function calls:
   695 ;;		_WriteCmd_LCD
   696 ;; This function is called by:
   697 ;;		_main
   698 ;;		_Initilize_LCD
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _ClearScreen_LCD
   704  0743                     _ClearScreen_LCD:	
   705                           
   706                           ;LCD.c: 47: WriteCmd_LCD(0x01);
   707                           
   708                           ;incstack = 0
   709                           ; Regs used in _ClearScreen_LCD: [wreg+status,2+status,0+pclath+cstack]
   710  0743  3001               	movlw	1
   711  0744  120A  118A  272F   	fcall	_WriteCmd_LCD
      +       120A  118A         
   712                           
   713                           ;LCD.c: 48: _delay((unsigned long)((3)*(10000000UL/4000.0)));
   714  0749  300A               	movlw	10
   715  074A  00F3               	movwf	??_ClearScreen_LCD+1
   716  074B  30BC               	movlw	188
   717  074C  00F2               	movwf	??_ClearScreen_LCD
   718  074D                     u97:	
   719  074D  0BF2               	decfsz	??_ClearScreen_LCD,f
   720  074E  2F4D               	goto	u97
   721  074F  0BF3               	decfsz	??_ClearScreen_LCD+1,f
   722  0750  2F4D               	goto	u97
   723  0751  0000               	nop
   724  0752  0008               	return
   725  0753                     __end_of_ClearScreen_LCD:	
   726                           
   727                           	psect	text6
   728  072F                     __ptext6:	
   729 ;; *************** function _WriteCmd_LCD *****************
   730 ;; Defined at:
   731 ;;		line 68 in file "LCD.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  Cmd             1    wreg     unsigned char 
   734 ;; Auto vars:     Size  Location     Type
   735 ;;  Cmd             1    1[COMMON] unsigned char 
   736 ;; Return value:  Size  Location     Type
   737 ;;		None               void
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0, pclath, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         1       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0
   748 ;;      Totals:         1       0       0       0       0
   749 ;;Total ram usage:        1 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    1
   752 ;; This function calls:
   753 ;;		_Toggle_Enable_Pin_LCD
   754 ;; This function is called by:
   755 ;;		_Initilize_LCD
   756 ;;		_ClearScreen_LCD
   757 ;;		_MoveCursorToPosition
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           
   762                           ;psect for function _WriteCmd_LCD
   763  072F                     _WriteCmd_LCD:	
   764                           
   765                           ;incstack = 0
   766                           ; Regs used in _WriteCmd_LCD: [wreg+status,2+status,0+pclath+cstack]
   767                           ;WriteCmd_LCD@Cmd stored from wreg
   768  072F  00F1               	movwf	WriteCmd_LCD@Cmd
   769                           
   770                           ;LCD.c: 70: PORTCbits.RC0 = 0;
   771  0730  1283               	bcf	3,5	;RP0=0, select bank0
   772  0731  1303               	bcf	3,6	;RP1=0, select bank0
   773  0732  1007               	bcf	7,0	;volatile
   774                           
   775                           ;LCD.c: 71: PORTB = Cmd;
   776  0733  0871               	movf	WriteCmd_LCD@Cmd,w
   777  0734  0086               	movwf	6	;volatile
   778                           
   779                           ;LCD.c: 73: Toggle_Enable_Pin_LCD();
   780  0735  120A  118A  2753   	fcall	_Toggle_Enable_Pin_LCD
   781  0738  0008               	return
   782  0739                     __end_of_WriteCmd_LCD:	
   783                           
   784                           	psect	text7
   785  0753                     __ptext7:	
   786 ;; *************** function _Toggle_Enable_Pin_LCD *****************
   787 ;; Defined at:
   788 ;;		line 55 in file "LCD.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;		None
   791 ;; Auto vars:     Size  Location     Type
   792 ;;		None
   793 ;; Return value:  Size  Location     Type
   794 ;;		None               void
   795 ;; Registers used:
   796 ;;		wreg
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   802 ;;      Params:         0       0       0       0       0
   803 ;;      Locals:         0       0       0       0       0
   804 ;;      Temps:          1       0       0       0       0
   805 ;;      Totals:         1       0       0       0       0
   806 ;;Total ram usage:        1 bytes
   807 ;; Hardware stack levels used:    1
   808 ;; This function calls:
   809 ;;		Nothing
   810 ;; This function is called by:
   811 ;;		_WriteCmd_LCD
   812 ;;		_WriteData_LCD
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           
   817                           ;psect for function _Toggle_Enable_Pin_LCD
   818  0753                     _Toggle_Enable_Pin_LCD:	
   819                           
   820                           ;LCD.c: 60: PORTCbits.RC1 = 1;
   821                           
   822                           ;incstack = 0
   823                           ; Regs used in _Toggle_Enable_Pin_LCD: [wreg]
   824  0753  1283               	bcf	3,5	;RP0=0, select bank0
   825  0754  1303               	bcf	3,6	;RP1=0, select bank0
   826  0755  1487               	bsf	7,1	;volatile
   827                           
   828                           ;LCD.c: 61: _delay((unsigned long)((200)*(10000000UL/4000000.0)));
   829  0756  30A6               	movlw	166
   830  0757  00F0               	movwf	??_Toggle_Enable_Pin_LCD
   831  0758                     u107:	
   832  0758  0BF0               	decfsz	??_Toggle_Enable_Pin_LCD,f
   833  0759  2F58               	goto	u107
   834  075A  0000               	nop
   835                           
   836                           ;LCD.c: 62: PORTCbits.RC1 = 0;
   837  075B  1283               	bcf	3,5	;RP0=0, select bank0
   838  075C  1303               	bcf	3,6	;RP1=0, select bank0
   839  075D  1087               	bcf	7,1	;volatile
   840                           
   841                           ;LCD.c: 63: _delay((unsigned long)((200)*(10000000UL/4000000.0)));
   842  075E  30A6               	movlw	166
   843  075F  00F0               	movwf	??_Toggle_Enable_Pin_LCD
   844  0760                     u117:	
   845  0760  0BF0               	decfsz	??_Toggle_Enable_Pin_LCD,f
   846  0761  2F60               	goto	u117
   847  0762  0000               	nop
   848  0763  0008               	return
   849  0764                     __end_of_Toggle_Enable_Pin_LCD:	
   850  007E                     btemp	set	126	;btemp
   851  007E                     wtemp	set	126
   852  007E                     wtemp0	set	126
   853  0080                     wtemp1	set	128
   854  0082                     wtemp2	set	130
   855  0084                     wtemp3	set	132
   856  0086                     wtemp4	set	134
   857  0088                     wtemp5	set	136
   858  007F                     wtemp6	set	127
   859  007E                     ttemp	set	126
   860  007E                     ttemp0	set	126
   861  0081                     ttemp1	set	129
   862  0084                     ttemp2	set	132
   863  0087                     ttemp3	set	135
   864  007F                     ttemp4	set	127
   865  007E                     ltemp	set	126
   866  007E                     ltemp0	set	126
   867  0082                     ltemp1	set	130
   868  0086                     ltemp2	set	134
   869  0080                     ltemp3	set	128


Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    WriteString_LCD@String	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Initilize_LCD
    _WriteString_LCD->_WriteData_LCD
    _WriteData_LCD->_Toggle_Enable_Pin_LCD
    _MoveCursorToPosition->_WriteCmd_LCD
    _Initilize_LCD->_ClearScreen_LCD
    _ClearScreen_LCD->_WriteCmd_LCD
    _WriteCmd_LCD->_Toggle_Enable_Pin_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     228
                                              6 COMMON     3     3      0
                    _ClearScreen_LCD
                      _Initilize_LCD
               _MoveCursorToPosition
                    _WriteString_LCD
 ---------------------------------------------------------------------------------
 (1) _WriteString_LCD                                      2     2      0      93
                                              2 COMMON     2     2      0
                      _WriteData_LCD
 ---------------------------------------------------------------------------------
 (2) _WriteData_LCD                                        1     1      0      15
                                              1 COMMON     1     1      0
              _Toggle_Enable_Pin_LCD
 ---------------------------------------------------------------------------------
 (1) _MoveCursorToPosition                                 1     1      0      90
                                              2 COMMON     1     1      0
                       _WriteCmd_LCD
 ---------------------------------------------------------------------------------
 (1) _Initilize_LCD                                        2     2      0      30
                                              4 COMMON     2     2      0
                    _ClearScreen_LCD
                       _WriteCmd_LCD
 ---------------------------------------------------------------------------------
 (2) _ClearScreen_LCD                                      2     2      0      15
                                              2 COMMON     2     2      0
                       _WriteCmd_LCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmd_LCD                                         1     1      0      15
                                              1 COMMON     1     1      0
              _Toggle_Enable_Pin_LCD
 ---------------------------------------------------------------------------------
 (3) _Toggle_Enable_Pin_LCD                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearScreen_LCD
     _WriteCmd_LCD
       _Toggle_Enable_Pin_LCD
   _Initilize_LCD
     _ClearScreen_LCD
       _WriteCmd_LCD
         _Toggle_Enable_Pin_LCD
     _WriteCmd_LCD
       _Toggle_Enable_Pin_LCD
   _MoveCursorToPosition
     _WriteCmd_LCD
       _Toggle_Enable_Pin_LCD
   _WriteString_LCD
     _WriteData_LCD
       _Toggle_Enable_Pin_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sun Aug 10 23:48:07 2014

                             pc 0002                     __CFG_CP$OFF 0000                              l13 07C4  
                            u67 07CF                              u77 07F4                              u87 07A4  
                            u97 074D                              fsr 0004                             l543 076D  
                           l547 0775                             l559 077B                             u107 0758  
                           u117 0760                    __CFG_CPD$OFF 0000                             fsr0 0004  
         __size_of_WriteCmd_LCD 000A                    __CFG_FOSC$HS 0000                    __CFG_LVP$OFF 0000  
                          STR_1 001A                            STR_2 0009                    __CFG_WRT$OFF 0000  
                          _main 07BF                            btemp 007E                   __CFG_BOREN$ON 0000  
                          ltemp 007E          __size_of_WriteData_LCD 000A                            start 0000  
                          ttemp 007E          ?_Toggle_Enable_Pin_LCD 0070                            wtemp 007E  
                  _WriteCmd_LCD 072F                           ?_main 0070                   __CFG_WDTE$OFF 0000  
        __size_of_Initilize_LCD 0029                           _PORTB 0006                           _TRISB 0086  
              ?_ClearScreen_LCD 0070                ?_WriteString_LCD 0070                           pclath 000A  
                         ltemp0 007E                           ltemp1 0082                           ltemp2 0086  
                         ltemp3 0080                           ttemp0 007E                           ttemp1 0081  
                         ttemp2 0084                           ttemp3 0087                           ttemp4 007F  
                         status 0003                           wtemp0 007E                           wtemp1 0080  
                         wtemp2 0082                           wtemp3 0084                           wtemp4 0086  
                         wtemp5 0088                           wtemp6 007F                 __initialization 07FC  
                  __end_of_main 07FC                          ??_main 0076                   _WriteData_LCD 0739  
 __size_of_MoveCursorToPosition 0016                   _Initilize_LCD 0796                  __CFG_PWRTE$OFF 0000  
                ?_WriteData_LCD 0070         __end_of__initialization 07FC                  ?_Initilize_LCD 0070  
                __pcstackCOMMON 0070         ??_Toggle_Enable_Pin_LCD 0070           WriteString_LCD@String 0073  
               WriteCmd_LCD@Cmd 0071                      __pmaintext 07BF                 ??_WriteData_LCD 0071  
             WriteData_LCD@Data 0071                      __stringtab 0003                 ??_Initilize_LCD 0074  
                       __ptext1 077A                         __ptext2 0739                         __ptext3 0764  
                       __ptext4 0796                         __ptext5 0743                         __ptext6 072F  
                       __ptext7 0753     MoveCursorToPosition@Address 0072            end_of_initialization 07FC  
      __size_of_ClearScreen_LCD 0010        __size_of_WriteString_LCD 001C    __end_of_MoveCursorToPosition 077A  
                     _PORTCbits 0007                       _TRISCbits 0087             start_initialization 07FC  
__size_of_Toggle_Enable_Pin_LCD 0011   __end_of_Toggle_Enable_Pin_LCD 0764                   ?_WriteCmd_LCD 0070  
             ??_ClearScreen_LCD 0072               ??_WriteString_LCD 0072                       ___latbits 0002  
           __end_of__stringdata 002B            _MoveCursorToPosition 0764                  ??_WriteCmd_LCD 0071  
                     __pstrings 0003           __end_of_WriteData_LCD 0743           __end_of_Initilize_LCD 07BF  
         ?_MoveCursorToPosition 0070                     __stringbase 0008                     __stringdata 0009  
            __end_of__stringtab 0009            __end_of_WriteCmd_LCD 0739          ??_MoveCursorToPosition 0072  
                 __size_of_main 003D                 _ClearScreen_LCD 0743                 _WriteString_LCD 077A  
                     stringcode 0003           _Toggle_Enable_Pin_LCD 0753                        stringdir 0003  
                      stringtab 0003         __end_of_ClearScreen_LCD 0753         __end_of_WriteString_LCD 0796  
